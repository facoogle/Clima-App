{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\facun\\\\OneDrive\\\\Escritorio\\\\09-React-Routing\\\\homework\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx'; // importo los componentes About y City\n\nimport About from '../components/About';\nimport City from '../components/City';\nimport HomeCard from '../components/HomeCard.jsx';\nimport axios from 'axios';\nimport { Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '6a9b9651318ede2644e620f696ebfaf1';\n\nfunction App() {\n  _s();\n\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [temperature, setTemperature] = useState(0);\n\n  const savePositionState = position => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  };\n\n  const fetchCity = async () => {\n    try {\n      await window.navigator.geolocation.getCurrentPosition(savePositionState);\n      const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=60d505bb48f9c02e8d1f29a621cd125f&units=metric`);\n      setTemperature({\n        name: res.data.name,\n        temp: res.data.main.temp\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(temperature);\n  useEffect(() => {\n    fetchCity();\n  }, [latitude, longitude]);\n  const [cities, setCities] = useState([]);\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n\n  const parana = \"parana\";\n  const buenosaires = \"buenos aires\";\n  const cordoba = \"cordoba\";\n  useEffect(() => {\n    onSearch(parana);\n    onSearch(buenosaires);\n    onSearch(cordoba);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }, this),\n      fetchCity: fetchCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/about\",\n      component: About\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(HomeCard, {\n        temperature: temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/ciudad/:ciudadId\",\n      render: _ref => {\n        let {\n          match\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(City, {\n          city: onFilter(match.params.ciudadId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 36\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aoWdZDX3fiuVcNQgSIel+OFze3g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Nav","Cards","About","City","HomeCard","axios","Route","apiKey","App","latitude","setLatitude","longitude","setLongitude","temperature","setTemperature","savePositionState","position","coords","fetchCity","window","navigator","geolocation","getCurrentPosition","res","get","name","data","temp","main","error","console","log","cities","setCities","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","then","r","json","recurso","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","clouds","all","latitud","coord","lat","longitud","lon","alert","onFilter","ciudadId","parseInt","length","parana","buenosaires","cordoba","match","params"],"sources":["C:/Users/facun/OneDrive/Escritorio/09-React-Routing/homework/src/containers/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\n// importo los componentes About y City\nimport About from '../components/About';\nimport City from '../components/City';\nimport HomeCard from '../components/HomeCard.jsx';\nimport axios from 'axios'\nimport { Route } from 'react-router-dom';\n\nconst apiKey = '6a9b9651318ede2644e620f696ebfaf1';\n\n\n\n\n\n\n\nfunction App() {\n  \n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [temperature, setTemperature] = useState(0);\n\n  const savePositionState = (position)=>{\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  }\n\nconst fetchCity = async () => {\n  try {\n    await window.navigator.geolocation.getCurrentPosition(savePositionState);\n    const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=60d505bb48f9c02e8d1f29a621cd125f&units=metric`)\n    setTemperature({name: res.data.name, temp: res.data.main.temp})\n    \n  } catch (error) {\n    console.log(error)\n  }\n}\nconsole.log(temperature)\nuseEffect(() => {\n  fetchCity();\n}, [latitude, longitude]);\n\n\n  \n\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  \n  \n  function onSearch(ciudad) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if(recurso.main !== undefined){\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n  \n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if(ciudad.length > 0) {\n        return ciudad[0];\n    } else {\n        return null;\n    }\n  }\n  const parana = \"parana\"\n  const buenosaires = \"buenos aires\"\n  const cordoba = \"cordoba\"\n  \n  \n  \n \n\n\n  useEffect(() => {\n    onSearch(parana);\n    onSearch(buenosaires);\n    onSearch(cordoba)\n    \n    \n  }, []); \n\n  \n\n\n\n  \n  return (\n    <div className=\"App\">\n      <h2>{}C</h2>\n      <Route path='/' render={() => <Nav onSearch={onSearch}/>} fetchCity = {fetchCity} />\n      <Route path='/about' component={About}/>\n      <Route exact path='/' render={() =>  <HomeCard temperature= {temperature}/> }/>\n      <Route exact path='/' render={() =>  <Cards cities={cities} onClose={onClose} /> }/>\n      <Route exact path='/ciudad/:ciudadId' \n             render={({match}) => (<City city={onFilter(match.params.ciudadId)}/>)}/>\n      <hr />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}