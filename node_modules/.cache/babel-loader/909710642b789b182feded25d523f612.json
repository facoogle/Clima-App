{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\facun\\\\OneDrive\\\\Escritorio\\\\09-React-Routing\\\\homework\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx'; // importo los componentes About y City\n\nimport About from '../components/About';\nimport City from '../components/City';\nimport { axios } from 'axios';\nimport { Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '6a9b9651318ede2644e620f696ebfaf1';\n\nfunction App() {\n  _s();\n\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [weather, setWeather] = useState(\"\");\n  const [temperature, setTemperature] = useState(0);\n  const [cityName, setCityName] = useState(\"\");\n\n  const savePositionToState = position => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  };\n\n  const fetchWeather = async () => {\n    try {\n      await window.navigator.geolocation.getCurrentPosition(savePositionToState);\n      const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=60d505bb48f9c02e8d1f29a621cd125f&units=metric`);\n      setTemperature(res.data.main.temp);\n      setCityName(res.data.name);\n      setWeather(res.data.weather[0].main);\n      console.log(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchWeather();\n  }, [latitude, longitude]);\n  const [cities, setCities] = useState([]);\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n\n  const parana = \"parana\";\n  const buenosaires = \"buenos aires\";\n  const cordoba = \"cordoba\";\n  useEffect(() => {\n    onSearch(parana);\n    onSearch(buenosaires);\n    onSearch(cordoba);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [temperature, \"C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/about\",\n      component: About\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/ciudad/:ciudadId\",\n      render: _ref => {\n        let {\n          match\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(City, {\n          city: onFilter(match.params.ciudadId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 36\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hsDpkK4UtrOQpKdKYnY1efXBUhM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Nav","Cards","About","City","axios","Route","apiKey","App","latitude","setLatitude","longitude","setLongitude","weather","setWeather","temperature","setTemperature","cityName","setCityName","savePositionToState","position","coords","fetchWeather","window","navigator","geolocation","getCurrentPosition","res","get","data","main","temp","name","console","log","err","error","cities","setCities","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","then","r","json","recurso","undefined","min","Math","round","temp_min","max","temp_max","img","icon","wind","speed","clouds","all","latitud","coord","lat","longitud","lon","alert","onFilter","ciudadId","parseInt","length","parana","buenosaires","cordoba","match","params"],"sources":["C:/Users/facun/OneDrive/Escritorio/09-React-Routing/homework/src/containers/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\n// importo los componentes About y City\nimport About from '../components/About';\nimport City from '../components/City';\nimport {axios} from 'axios'\nimport { Route } from 'react-router-dom';\n\nconst apiKey = '6a9b9651318ede2644e620f696ebfaf1';\n\n\n\n\n\n\n\nfunction App() {\n  \n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [weather, setWeather] = useState(\"\");\n  const [temperature, setTemperature] = useState(0);\n  const [cityName, setCityName] = useState(\"\");\n\n  const savePositionToState = (position) => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  };\n\n  const fetchWeather = async () => {\n    try {\n      await window.navigator.geolocation.getCurrentPosition(\n        savePositionToState\n      );\n      const res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=60d505bb48f9c02e8d1f29a621cd125f&units=metric`\n      );\n      setTemperature(res.data.main.temp);\n      setCityName(res.data.name);\n      setWeather(res.data.weather[0].main);\n      console.log(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchWeather();\n  }, [latitude, longitude]);\n\n\n  \n\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  \n  \n  function onSearch(ciudad) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if(recurso.main !== undefined){\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n  \n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if(ciudad.length > 0) {\n        return ciudad[0];\n    } else {\n        return null;\n    }\n  }\n  const parana = \"parana\"\n  const buenosaires = \"buenos aires\"\n  const cordoba = \"cordoba\"\n  \n  \n  \n \n\n\n  useEffect(() => {\n    onSearch(parana);\n    onSearch(buenosaires);\n    onSearch(cordoba)\n    \n  }, []); \n\n  \n\n\n\n  \n  return (\n    <div className=\"App\">\n      <h2>{temperature}C</h2>\n      <Route path='/' render={() => <Nav onSearch={onSearch}/>}/>\n      <Route path='/about' component={About}/>\n      <Route exact path='/' render={() =>  <Cards cities={cities} onClose={onClose} /> }/>\n      <Route exact path='/ciudad/:ciudadId' \n             render={({match}) => (<City city={onFilter(match.params.ciudadId)}/>)}/>\n      <hr />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}