{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\facun\\\\OneDrive\\\\Escritorio\\\\09-React-Routing\\\\homework\\\\src\\\\containers\\\\App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx'; // importo los componentes About y City\n\nimport About from '../components/About';\nimport City from '../components/City'; // importo Route:\n\nimport { Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '6a9b9651318ede2644e620f696ebfaf1';\nwindow.addEventListener('load', () => {\n  if (navigator.geolocation) navigator.geolocation.getCurrentPosition(posicion => {\n    var _s = $RefreshSig$();\n\n    let lat = posicion.coords.latitude;\n    let lon = posicion.coords.longitude;\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&APPID=${apiKey}&units=metric`).then(c => c.json()).then(_s(recurso => {\n      _s();\n\n      if (recurso.main !== undefined) {\n        const names = {\n          name: recurso.name\n        };\n        useEffect(() => {\n          onSearch(names.name);\n        }, []);\n      }\n    }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n  });\n});\n\nfunction App() {\n  _s2();\n\n  const [cities, setCities] = useState([]);\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n\n  const parana = \"parana\";\n  const buenosaires = \"buenos aires\";\n  const cordoba = \"cordoba\";\n  useEffect(() => {\n    onSearch(parana);\n    onSearch(buenosaires);\n    onSearch(cordoba);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/about\",\n      component: About\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/ciudad/:ciudadId\",\n      render: _ref => {\n        let {\n          match\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(City, {\n          city: onFilter(match.params.ciudadId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 36\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Nav","Cards","About","City","Route","apiKey","window","addEventListener","navigator","geolocation","getCurrentPosition","posicion","lat","coords","latitude","lon","longitude","fetch","then","c","json","recurso","main","undefined","names","name","onSearch","App","cities","setCities","onClose","id","oldCities","filter","ciudad","r","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","clouds","all","latitud","coord","longitud","alert","onFilter","ciudadId","parseInt","length","parana","buenosaires","cordoba","match","params"],"sources":["C:/Users/facun/OneDrive/Escritorio/09-React-Routing/homework/src/containers/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\n// importo los componentes About y City\nimport About from '../components/About';\nimport City from '../components/City';\n// importo Route:\nimport { Route } from 'react-router-dom';\n\nconst apiKey = '6a9b9651318ede2644e620f696ebfaf1';\n\nwindow.addEventListener('load', ()=>{\n  if(navigator.geolocation) navigator.geolocation.getCurrentPosition(posicion =>{\n    let lat = posicion.coords.latitude;\n    let lon = posicion.coords.longitude\n\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&APPID=${apiKey}&units=metric`)\n  .then(c => c.json())\n  .then((recurso)=>{\n    if(recurso.main !== undefined){\n      const names = {\n        name: recurso.name \n      }\n      useEffect(() => {\n        onSearch(names.name);\n      }, []);\n    }\n  })\n  })\n})\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n  \n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if(recurso.main !== undefined){\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if(ciudad.length > 0) {\n        return ciudad[0];\n    } else {\n        return null;\n    }\n  }\n  const parana = \"parana\"\n  const buenosaires = \"buenos aires\"\n  const cordoba = \"cordoba\"\n  \n  \n  \n \n\n\n  useEffect(() => {\n    onSearch(parana);\n    onSearch(buenosaires);\n    onSearch(cordoba)\n  }, []); \n  return (\n    <div className=\"App\">\n      <Route path='/' render={() => <Nav onSearch={onSearch} />}/>\n      <Route path='/about' component={About}/>\n      <Route exact path='/' render={() =>  <Cards cities={cities} onClose={onClose} />}/>\n      <Route exact path='/ciudad/:ciudadId' \n             render={({match}) => (<City city={onFilter(match.params.ciudadId)}/>)}/>\n      <hr />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}